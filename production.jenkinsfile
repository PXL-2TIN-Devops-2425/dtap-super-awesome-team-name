pipeline {
    agent any
    environment {
        // Define DockerHub credentials
        DOCKER_USER = credentials('dockerhub-credentials')
        DOCKER_USERNAME = "${DOCKER_USER_USR}"
    }
    stages {
        // Stage 1: Deploy Prod - Haal de laatste versie van de Docker-image van DockerHub
        stage('Deploy Prod') {
            steps {
                echo 'Pulling Docker image from DockerHub...'
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', 
                                  usernameVariable: 'DOCKER_USERNAME', 
                                  passwordVariable: 'DOCKER_PASSWORD')]) {
                echo "Using DockerHub username: ${DOCKER_USERNAME}"  // This will print the DockerHub username
                sh '''
                docker pull $DOCKER_USERNAME/calculator-app
                '''
                }
            }
        }

        // Stage 2: Start Prod - Start de container op de productie-server op poort 80
        stage('Start Prod') {
            steps {
                echo 'Starting Docker container on Production server...'
                sh '''
                docker stop calculator-app || true  // Stop de oude container indien actief
                docker rm calculator-app || true  // Verwijder de oude container
                docker run -d -p 80:3000 --name calculator-app $DOCKER_USERNAME/calculator-app
                '''
            }
        }

        // Stage 3: Test Prod - Controleer of de applicatie draait door een HTTP-verzoek
        stage('Test Prod') {
            steps {
                echo 'Testing the application in Production...'
                sh '''
                curl -f http://localhost  // Test de applicatie door de HTTP-statuscode te controleren
                '''
            }
        }
    }
}
