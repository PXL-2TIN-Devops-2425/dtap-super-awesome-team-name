pipeline {
    agent any
    environment {
        // Define DockerHub credentials
        DOCKER_USER = credentials('dockerhub-credentials')
        DOCKER_USERNAME = "${DOCKER_USER_USR}"
        PROD_USER = 'ec2-user'
        PROD_IP = '44.211.213.97'
    }
    stages {
        // Stage 1: Deploy Prod - Pull the latest Docker image from DockerHub
        stage('Deploy Prod') {
            steps {
                echo 'Pulling Docker image from DockerHub...'
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', 
                                  usernameVariable: 'DOCKER_USERNAME', 
                                  passwordVariable: 'DOCKER_PASSWORD')]) {
                    echo "Using DockerHub username: ${DOCKER_USERNAME}"  // Print the DockerHub username
                    sh '''
                    docker pull $DOCKER_USERNAME/calculator-app
                    '''
                }
            }
        }

        // Stage 2: Start Prod - Start the container on the production server on port 80
        stage('Start Prod') {
            steps {
                sshagent(['ssh-key-id']) { // Jenkins SSH key ID
                    echo 'Preparing production server and starting the Docker container...'
                    sh '''
                    ssh-keyscan -H ${PROD_IP} >> ~/.ssh/known_hosts
                    ssh ${PROD_USER}@${PROD_IP} bash -c "'
                    # Check if port 80 is in use and kill the process if needed
                    if lsof -i:80 | grep LISTEN; then
                        echo \"Port 80 is in use. Stopping the process...\"
                        fuser -k 80/tcp
                    fi

                    # Stop and remove the old Docker container if it exists
                    if docker ps -aq -f name=calculator-app; then
                        echo \"Stopping and removing old container...\"
                        docker stop calculator-app
                        docker rm calculator-app
                    fi

                    # Run the new Docker container
                    echo \"Starting the new Docker container...\"
                    docker run -d -p 80:3000 --name calculator-app $DOCKER_USERNAME/calculator-app
                    '"
                    '''
                }
            }
        }

        // Stage 3: Test Prod - Check if the application is running by sending an HTTP request
        stage('Test Prod') {
            steps {
                echo 'Testing the application in Production...'
                sh ''' 
                curl -f http://${PROD_IP}
                '''
            }
        }
    }
}
